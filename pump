#!/usr/bin/env python3

import sys
import serial
import time

# Define the motor control pins
motor_pins = {
    1: {'digital1': 2, 'digital2': 4, 'pwm': 3},
    2: {'digital1': 7, 'digital2': 8, 'pwm': 5},
    3: {'digital1': 10, 'digital2': 11, 'pwm': 6},
    4: {'digital1': 12, 'digital2': 13, 'pwm': 9}
}

def send_command(ser, command_type, pin, value):
    ser.write(bytes([command_type, pin, value]))

def main():
    if len(sys.argv) != 2:
        print("Usage: ./pump [serial device path]")
        sys.exit(1)

    serial_device = sys.argv[1]

    try:
        ser = serial.Serial(serial_device, 9600, timeout=1)
        time.sleep(2)  # Wait for the serial connection to initialize

        print("Enter pump number and intensity (separate lines). Type 'exit' to quit.")

        while True:
            pump_input = input().strip()

            if pump_input.lower() == 'exit':
                break

            try:
                pump_number, intensity = map(int, pump_input.split())
            except ValueError:
                print("Invalid input. Please enter pump number and intensity separated by a space.")
                continue

            if pump_number not in motor_pins:
                print(f"Invalid pump number '{pump_number}'. Must be between 1 and 4.")
                continue

            if intensity < 0 or intensity > 255:
                print("Invalid intensity. Must be between 0 and 255.")
                continue

            # Set the direction (default direction assumed to be digital1: 0, digital2: 1)
            send_command(ser, 0, motor_pins[pump_number]['digital1'], 0)
            send_command(ser, 0, motor_pins[pump_number]['digital2'], 1)

            # Set the intensity with PWM
            send_command(ser, 1, motor_pins[pump_number]['pwm'], intensity)

            print("Command sent successfully.")

        ser.close()
    except serial.SerialException as e:
        print(f"Error communicating with {serial_device}: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()

